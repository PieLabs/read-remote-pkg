"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = require("fs-extra");
const log_factory_1 = require("log-factory");
const path_1 = require("path");
const logger = log_factory_1.buildLogger();
class Local {
    constructor(cwd) {
        this.cwd = cwd;
    }
    pkgPath(pattern) {
        return path_1.join(this.cwd, pattern.value, 'package.json');
    }
    match(pattern) {
        let pkg = this.pkgPath(pattern);
        try {
            let stat = fs_extra_1.statSync(pkg);
            return stat.isFile();
        }
        catch (e) {
            return false;
        }
    }
    view(pattern) {
        logger.info('[view], pattern: ', pattern);
        if (!this.match(pattern)) {
            return Promise.reject(new Error('match failed'));
        }
        else {
            let pkg = this.pkgPath(pattern);
            return new Promise((resolve, reject) => {
                fs_extra_1.readJson(pkg, (err, data) => {
                    if (err) {
                        resolve(undefined);
                        return;
                    }
                    logger.silly('[view] data: ', data);
                    resolve(data);
                });
            });
        }
    }
}
exports.default = Local;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2NhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHVDQUE4QztBQUU5Qyw2Q0FBMEM7QUFDMUMsK0JBQTRCO0FBRTVCLE1BQU0sTUFBTSxHQUFHLHlCQUFXLEVBQUUsQ0FBQztBQUU3QjtJQUVFLFlBQW9CLEdBQVc7UUFBWCxRQUFHLEdBQUgsR0FBRyxDQUFRO0lBQUksQ0FBQztJQUU1QixPQUFPLENBQUMsT0FBaUI7UUFDL0IsTUFBTSxDQUFDLFdBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFpQjtRQUNyQixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQztZQUNILElBQUksSUFBSSxHQUFHLG1CQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDekIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUN2QixDQUFDO1FBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNYLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDZixDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUksQ0FBQyxPQUFpQjtRQUVwQixNQUFNLENBQUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQzFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztRQUNuRCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ2hDLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNO2dCQUNqQyxtQkFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxJQUFJO29CQUN0QixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO3dCQUNSLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQzt3QkFDbkIsTUFBTSxDQUFDO29CQUNULENBQUM7b0JBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLENBQUM7b0JBQ3BDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDaEIsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7SUFDSCxDQUFDO0NBQ0Y7QUFyQ0Qsd0JBcUNDIiwiZmlsZSI6ImxvY2FsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2V5VmFsdWUsIFZpZXdlciB9IGZyb20gJy4vaW5kZXgnO1xuaW1wb3J0IHsgcmVhZEpzb24sIHN0YXRTeW5jIH0gZnJvbSAnZnMtZXh0cmEnO1xuXG5pbXBvcnQgeyBidWlsZExvZ2dlciB9IGZyb20gJ2xvZy1mYWN0b3J5JztcbmltcG9ydCB7IGpvaW4gfSBmcm9tICdwYXRoJztcblxuY29uc3QgbG9nZ2VyID0gYnVpbGRMb2dnZXIoKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9jYWwgaW1wbGVtZW50cyBWaWV3ZXIge1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY3dkOiBzdHJpbmcpIHsgfVxuXG4gIHByaXZhdGUgcGtnUGF0aChwYXR0ZXJuOiBLZXlWYWx1ZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGpvaW4odGhpcy5jd2QsIHBhdHRlcm4udmFsdWUsICdwYWNrYWdlLmpzb24nKTtcbiAgfVxuXG4gIG1hdGNoKHBhdHRlcm46IEtleVZhbHVlKTogYm9vbGVhbiB7XG4gICAgbGV0IHBrZyA9IHRoaXMucGtnUGF0aChwYXR0ZXJuKTtcbiAgICB0cnkge1xuICAgICAgbGV0IHN0YXQgPSBzdGF0U3luYyhwa2cpO1xuICAgICAgcmV0dXJuIHN0YXQuaXNGaWxlKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHZpZXcocGF0dGVybjogS2V5VmFsdWUpOiBQcm9taXNlPGFueSB8IHVuZGVmaW5lZD4ge1xuXG4gICAgbG9nZ2VyLmluZm8oJ1t2aWV3XSwgcGF0dGVybjogJywgcGF0dGVybik7XG4gICAgaWYgKCF0aGlzLm1hdGNoKHBhdHRlcm4pKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdtYXRjaCBmYWlsZWQnKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBwa2cgPSB0aGlzLnBrZ1BhdGgocGF0dGVybik7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICByZWFkSnNvbihwa2csIChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICByZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGxvZ2dlci5zaWxseSgnW3ZpZXddIGRhdGE6ICcsIGRhdGEpO1xuICAgICAgICAgIHJlc29sdmUoZGF0YSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59Il19
